</div>
</section>


</main>

</div>

<div class="preloader"><span class="spinner spinner-round"></span></div>

<!-- JavaScript -->
<script src="assets/js/jquery.bundle.js?ver=192"></script>
<script src="assets/js/scripts.js?ver=192"></script>
<script src="assets/js/charts.js"></script>
<script>

    $(document).ready(function () {

        let menu = 1
        $('#toggle-sidebar-btn').click(function (e) {
            e.preventDefault()
            const screenSize = document.documentElement.clientWidth
            if (menu == 1) {
                $('.right-nav').addClass('right-nav--small')
                $('.menu-text').hide()
                $('#toggle-sidebar-icon').removeClass('fa-ellipsis-v').addClass('fa-ellipsis-h')
                $('.accfootersocbutton_a').css('display', 'block').css('margin-bottom', '15px')
                $('.right-nav__copy,.right-nav__links').hide()
                if (screenSize > 922) {
                    $('#right-col').css('margin', '15px 15px 0 80px')
                }
                menu = 0
            } else if (menu == 0) {
                $('.right-nav').removeClass('right-nav--small')
                $('.menu-text').fadeIn(800)
                $('#toggle-sidebar-icon').removeClass('fa-ellipsis-h').addClass('fa-ellipsis-v')
                $('.accfootersocbutton_a').css('display', 'inline-block').css('margin-bottom', '0px')
                $('.right-nav__copy,.right-nav__links').show()
                if (screenSize > 992) {
                    $('#right-col').css('margin', '15px 15px 0 348px')
                }
                menu = 1
            }
        })

        const screenSize = document.documentElement.clientWidth
        if (screenSize < 992) {
            $('.right-nav').addClass('right-nav--small')
            $('.menu-text').hide()
            $('#toggle-sidebar-icon').removeClass('fa-ellipsis-v').addClass('fa-ellipsis-h')
            $('.accfootersocbutton_a').css('display', 'block').css('margin-bottom', '15px')
            $('.right-nav__copy,.right-nav__links').hide()
            $('#right-col').css('margin', '15px 15px 0 90px')
            menu = 0
        }

        $(window).on('resize', function () {
            var win = $(this); //this = window

            if (win.width() < 992) {
                $('.right-nav').addClass('right-nav--small')
                $('.menu-text').hide()
                $('#toggle-sidebar-icon').removeClass('fa-ellipsis-v').addClass('fa-ellipsis-h')
                $('.accfootersocbutton_a').css('display', 'block').css('margin-bottom', '15px')
                $('.right-nav__copy,.right-nav__links').hide()
                $('#right-col').css('margin', '15px 15px 0 90px')
                menu = 0
            } else {
                $('.right-nav').removeClass('right-nav--small')
                $('.menu-text').fadeIn(800)
                $('#toggle-sidebar-icon').removeClass('fa-ellipsis-h').addClass('fa-ellipsis-v')
                $('.accfootersocbutton_a').css('display', 'inline-block').css('margin-bottom', '0px')
                $('.right-nav__copy,.right-nav__links').show()
                $('#right-col').css('margin', '15px 15px 0 348px')
                menu = 1
            }
        });


        // Format level expiration date
        $('.expDate').each(function () {
            const expDate = new Date($(this).html() * 1000)
            const now = new Date()
            const diffTime = Math.abs(expDate - now)
            const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))
            $(this).html(diffDays + ' días')
        })

        // Stats card hover
        $('.pa-card').hover(function () {
            $(this).find('i').addClass('card-icon-hover')
        }, function () {
            $(this).find('i').addClass('card-icon').removeClass('card-icon-hover')
        })

        // Copy url btn
        const agentUrl = $('#agent-url').val()
        $('#copyUrlBtn').click(function () {
            navigator.clipboard.writeText(agentUrl).then(function () {
                console.log('Copying to clipboard was successful...')
            }, function () {
                console.log('Could not copy text...')
            })
        })

        $('.toastr-success').each(function () {
            var $self = $(this);
            $self.on("click", function (e) {
                toastr.clear();
                toastr.options = {
                    "closeButton": true,
                    "newestOnTop": false,
                    "preventDuplicates": true,
                    "positionClass": "toast-bottom-center",
                    "showDuration": "1000",
                    "hideDuration": "10000",
                    "timeOut": "2000",
                    "extendedTimeOut": "1000"
                };
                toastr.success('<em class="ti ti-check toast-message-icon"></em> ¡Enlace copiado correctamente!');
                e.preventDefault();
            });
        });


        // Transactions

        $('.methodSelector').click(function () {
            $('.methodSelector').removeClass('active')
            $(this).addClass('active')
            $('.tx-container').hide()
            const table = $(this).data('table')
            if (table == 1) $('#inTxs').show()
            else if (table == 2) $('#myTxs').show()
            else if (table == 3) $('#extraEarnings').show()
            else if (table == 4) $('#lostEarnings').show()
        })

        // format date
        // Format level expiration date
        $('.date').each(function () {
            let date = new Date($(this).html() * 1000)
            date = date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear() + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()
            $(this).html(date)
        })

        $('.date2').each(function () {
            let date = new Date($(this).html() * 1000)
            date = date.getDate() + '/' + date.getMonth() + '/' + date.getFullYear()
            $(this).html(date)
        })


        // Stats
        $('.stats-icon').click(function () {
            const icon = $(this)
            if ($(icon).data('show') == 0) {
                $(icon).removeClass('fa-plus-square').addClass('fa-minus-square')
                $(icon).data('show', 1)
                const type = $(this).data('type')
                if (type == 'level') {
                    const level = $(this).data('level')
                    $('.stats-ref-row').each(function (i, row) {
                        if ($(row).data('type') == type && $(row).data('level') == level) $(row).show()
                    })
                }
                else if (type == 'line') {
                    const line = $(this).data('line')
                    $('.stats-ref-row').each(function (i, row) {
                        if ($(row).data('type') == type && $(row).data('line') == line) $(row).show()
                    })
                }
            }
            else if ($(icon).data('show') == 1) {
                $(icon).data('show', 0)
                $(icon).removeClass('fa-minus-square').addClass('fa-plus-square')
                const type = $(this).data('type')
                if (type == 'level') {
                    const level = $(this).data('level')
                    $('.stats-ref-row').each(function (i, row) {
                        if ($(row).data('type') == type && $(row).data('level') == level) $(row).hide()
                    })
                }
                else if (type == 'line') {
                    const line = $(this).data('line')
                    $('.stats-ref-row').each(function (i, row) {
                        if ($(row).data('type') == type && $(row).data('line') == line) $(row).hide()
                    })
                }
            }

        })



    })

</script>
<script src="<%= `${host}/assets/js/bundle.js` %>"></script>
<% if(url == 'referrals') { %>
<script>
    $(document).ready(function () {
        /* Referrals */
        const userId = <%- userData.user.id %>;
        const referralsByLine = <%- JSON.stringify(userData.referralsByLine) %>;
        const referral1 = referralsByLine[1][0] && { id: referralsByLine[1][0].id, label: referralsByLine[1][0].address, level: 1, color: '#39d884', font: { size: 22, color: '#39d884' }, }
        const referral2 = referralsByLine[1][1] && { id: referralsByLine[1][1].id, label: referralsByLine[1][1].address, level: 1, color: '#39d884', font: { size: 22, color: '#39d884' }, }
        let dataSet = [{ id: userId, label: '<%- userData.user.address %>', color: '#007bff', font: { size: 22, color: '#007bff' }, level: 0, }]
        let edgesSet = []
        if (referral1) { dataSet.push(referral1); edgesSet.push({ from: userId, to: referral1.id, }) }
        if (referral2) { dataSet.push(referral2); edgesSet.push({ from: userId, to: referral2.id, }) }

        var nodes = new vis.DataSet(dataSet);

        // create an array with edges
        var edges = new vis.DataSet(edgesSet);

        // create a network
        var container = document.getElementById('mynetwork');

        var data = {
            nodes: nodes,
            edges: edges
        };
        var options = {
            interaction: { hover: true },
            nodes: {
                shape: 'dot',
                size: 36,
                font: {
                    size: 28
                },
                borderWidth: 1,
                shadow: false
            },
            layout: {

                hierarchical: {
                    direction: "UD",
                    levelSeparation: 250,
                    nodeSpacing: 100,
                }
            },
            edges: {
                smooth: {
                    type: 'cubicBezier',
                    forceDirection: 'vertical',
                    roundness: 0.4
                },
            },
            autoResize: true,
            physics: {
                "enabled": true
            }

        };
        var network = new vis.Network(container, data, options);
        network.on("click", function (params) {
            const clickedNode = params.nodes[0]
            const clickedNodeData = nodes.get(clickedNode)

            fetch(`<%= api %>/getReferrals/${clickedNode}`)
                .then(res => res.json())
                .then(data => {
                    let ref1 = data.payload[0] && data.payload[0]
                    if (data.payload[0]) {
                        nodes.add({ id: data.payload[0].id, label: data.payload[0].address, level: clickedNodeData.level + 1, color: '#39d884', font: { size: 22, color: '#39d884' }, })
                        edges.add({ from: clickedNode, to: data.payload[0].id })
                    }
                    if (data.payload[1]) {
                        nodes.add({ id: data.payload[1].id, label: data.payload[1].address, level: clickedNodeData.level + 1, color: '#39d884', font: { size: 22, color: '#39d884' }, })
                        edges.add({ from: clickedNode, to: data.payload[1].id })
                    }
                })
        });

        network.on("hoverNode", function (params) {
            network.canvas.body.container.style.cursor = 'pointer'
        });
        network.on("blurNode", function (params) {
            network.canvas.body.container.style.cursor = 'default'
        });
    })
</script>
<% } %>
</body>

</html>